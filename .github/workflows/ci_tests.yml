#
# Build GMT and run tests
#
name: Tests
on:
  push:
    # build master and 6.x branches
    branches:
      - master
      - 6.[0-9]+
      - github-actions  # TODO: remove this before merging
  pull_request:
  # schedule daily tests
  schedule:
    - cron: '0 12 * * *'

jobs:
  linux:
    name: ${{ matrix.name }}

    env:
      COASTLINEDIR: ${{ github.workspace }}/coastline
      INSTALLDIR: ${{ github.workspace }}/gmt-install-dir

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - name: Linux - Compile only
            os: ubuntu-latest
            BUILD_DOCS  : false
            DEPLOY_DOCS : false
            PACKAGE     : false
            RUN_TESTS   : false

          - name: Linux - Build docs + Deploy docs + Package
            os: ubuntu-latest
            BUILD_DOCS  : true
            DEPLOY_DOCS : true
            PACKAGE     : true
            RUN_TESTS   : false

          # - name: Linux - Tests
          #   os: ubuntu-latest
          #   BUILD_DOCS  : false
          #   DEPLOY_DOCS : false
          #   PACKAGE     : false
          #   RUN_TESTS   : true

          # macOS
          - name: macOS - Compile only
            os: macos-latest
            BUILD_DOCS  : false
            DEPLOY_DOCS : false
            PACKAGE     : false
            RUN_TESTS   : false

          - name: macOS - Build docs + Deploy docs + Package
            os: macos-latest
            BUILD_DOCS  : true
            DEPLOY_DOCS : false
            PACKAGE     : true
            RUN_TESTS   : false

          # - name: macOS - Tests
          #   os: macos-latest
          #   BUILD_DOCS  : false
          #   DEPLOY_DOCS : false
          #   PACKAGE     : false
          #   RUN_TESTS   : true

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            bash ci/install-dependencies-linux.sh
          elif [ "$RUNNER_OS" = "macOS" ]; then
            bash ci/install-dependencies-macOS.sh
          fi
        env:
          RUN_TESTS: ${{ matrix.RUN_TESTS }}
          BUILD_DOCS: ${{ matrix.BUILD_DOCS }}

      - name: Download coastlines
        run: bash ci/download-coastlines.sh

      - name: Configure GMT
        run: bash ci/config-gmt-unix.sh
        env:
          TEST: ${{ matrix.RUN_TESTS }}
          BUILD_DOCS: ${{ matrix.BUILD_DOCS }}

      - name: Compile GMT
        run: |
          set -x -e
          mkdir -p build
          cd build
          #cmake -G Ninja ..
          cmake ..
          cmake --build .

      - name: Build documentations
        run: |
          set -x -e
          cd build
          cmake --build . --target docs_depends
          cmake --build . --target optimize_images
          cmake --build . --target animation
          cmake --build . --target docs_html
          # if html.log isn't empty (i.e., sphinx raise warnings), return 1
          ! [ -s doc/rst/html.log ]
          cmake --build . --target docs_man
          # if man.log isn't empty (i.e., sphinx raise warnings), return 1
          ! [ -s doc/rst/man.log ]
        if: matrix.BUILD_DOCS == true

      - name: Install GMT
        run: |
          set -x -e
          cd build
          cmake --build . --target install
          # add GMT PATH to bin
          echo "::add-path::${INSTALLDIR}/bin"

      - name: Check a few simple commands
        run: |
          set -x -e
          gmt --version
          gmt-config --all
          gmt defaults -Vd
          gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -P -Vd > test.ps
          gmt begin && gmt coast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -Vd && gmt end
          #gmt grdimage @earth_relief_01d -JH10c -Baf -pdf map
          gmt earthtide -T2018-06-18T12:00:00 -Gsolid_tide_up.grd

      - name: Run full tests
        run: |
          set -x -e
          cd build
          ctest --output-on-failure --force-new-ctest-process -j4 --timeout 480
        if: matrix.RUN_TESTS == true
